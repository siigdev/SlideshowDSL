package org.xtext.example.mydsl.generator

import org.eclipse.xtext.generator.IGeneratorContext
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.emf.ecore.resource.Resource
import org.xtext.example.mydsl.anislide.Template
import org.xtext.example.mydsl.generator.AnislideGenerator;
import org.xtext.example.mydsl.anislide.Global
import org.xtext.example.mydsl.anislide.Slide
import org.xtext.example.mydsl.anislide.Title
import org.xtext.example.mydsl.anislide.Tmplt
import org.xtext.example.mydsl.anislide.ProgressAnimation
import org.xtext.example.mydsl.anislide.Textcolor
import org.xtext.example.mydsl.anislide.BackgroundColor
class Latexgenerator extends AnislideGenerator  {
	new(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		initialise(resource, fsa, context);
		fsa.generateFile(title + ".tex", generateDocument());

	}
	def generateDocument() {
		'''
		% #########################
		% # GENERATED BY AniSlide #
		% #########################
		
		\documentclass{beamer}
		\usepackage{xcolor}
		«FOR global : model.global»
		«global.generateGlobal»
		«ENDFOR»
		
		«FOR progressani : model.progressanimations»
		«progressani.generateProgress»
		«ENDFOR»
		
		«FOR template : model.templates»
		«template.generateTemplate»
		«ENDFOR»
		\begin{document}
		«FOR slide : model.slides»
		«slide.generateSlide»
		«ENDFOR»
		
		\end{document}
		'''
	}
	
	def generateProgress(ProgressAnimation progressani) {
		'''
		% progressani
		'''
	}
	def generateGlobal(Global global) {
		'''
		«FOR style : global.globalbody.styles»
				«style.generate»
		«ENDFOR»
		
		'''
	}
	def generateTemplate(Template template) {
		'''
		
		'''
	}
	def generateSlide(Slide slide) {		
		'''
		{
		«FOR style : slide.slidebody.styles»
				«style.generate»
		«ENDFOR»
		\begin{frame}
		«FOR entity : slide.slidebody.slideentities»
			«entity.generate»
		«ENDFOR»
		\end{frame}
		}
		'''
	}
	def dispatch generate(Title entity) {
		''' 
		\frametitle{«entity.value»}
		'''
	}
	def dispatch generate(Tmplt entity) {
		''' 
		\usebeamertemplate{«entity.value.name»}
		'''
	}
	def dispatch generate(Textcolor entity) {
		''' 
		\definecolor{TempText}{RGB}{«entity.value»}
		\setbeamercolor{normal text}{fg=TempText}
		'''
	}
	def dispatch generate(BackgroundColor entity) {
		''' 
		\definecolor{TempBG}{RGB}{«entity.value»}
		\setbeamercolor{background canvas}{bg=TempBG}
		''' 
	}
}